package pojo;
// Generated Sep 24, 2024 10:15:07 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * Driver generated by hbm2java
 */
public class Driver  implements java.io.Serializable {


     private Integer idDriver;
     private String namaDriver;
     private String noSim;
     private String operator;
     private Set fleets = new HashSet(0);

    public Driver() {
    }

	
    public Driver(String namaDriver, String noSim, String operator) {
        this.namaDriver = namaDriver;
        this.noSim = noSim;
        this.operator = operator;
    }
    public Driver(String namaDriver, String noSim, String operator, Set fleets) {
       this.namaDriver = namaDriver;
       this.noSim = noSim;
       this.operator = operator;
       this.fleets = fleets;
    }
   
    public Integer getIdDriver() {
        return this.idDriver;
    }
    
    public void setIdDriver(Integer idDriver) {
        this.idDriver = idDriver;
    }
    public String getNamaDriver() {
        return this.namaDriver;
    }
    
    public void setNamaDriver(String namaDriver) {
        this.namaDriver = namaDriver;
    }
    public String getNoSim() {
        return this.noSim;
    }
    
    public void setNoSim(String noSim) {
        this.noSim = noSim;
    }
    public String getOperator() {
        return this.operator;
    }
    
    public void setOperator(String operator) {
        this.operator = operator;
    }
    public Set getFleets() {
        return this.fleets;
    }
    
    public void setFleets(Set fleets) {
        this.fleets = fleets;
    }

    @Override
    public String toString() {
        return "Driver Name: " + namaDriver + ", SIM No: " + noSim;
    }

    
    // Dalam Driver.java
   @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Driver other = (Driver) obj;
        return Objects.equals(idDriver, other.idDriver); // membandingkan idDriver
    }

    @Override
    public int hashCode() {
       return Objects.hash(idDriver);  // hashCode berdasarkan idDriver

    }
}


